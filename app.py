import os
import requests
from flask import Flask, render_template, request, jsonify
import google.generativeai as genai
from datetime import datetime

app = Flask(__name__)

API_KEY = os.getenv("API_KEY")
CX = os.getenv("CX")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

FAQ = {
    "—Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ": "–†–∞–±–æ—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ –Ω–∞ –û–±—â–∏–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–≥—Ä–∞–¥ –µ –æ—Ç –ø–æ–Ω–µ–¥–µ–ª–Ω–∏–∫ –¥–æ –ø–µ—Ç—ä–∫, 8:30 ‚Äì 17:00 —á. –±–µ–∑ –ø—Ä–µ–∫—ä—Å–≤–∞–Ω–µ. –ü–æ–≤–µ—á–µ: https://www.dimitrovgrad.bg/bg/rabotno-vreme",
    "–∫–º–µ—Ç": "–ö–º–µ—Ç –Ω–∞ –û–±—â–∏–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–≥—Ä–∞–¥ –µ –ò–≤–æ –î–∏–º–æ–≤. –ü–æ–≤–µ—á–µ: https://www.dimitrovgrad.bg/bg/kmet",
    "–æ–±—â–∏–Ω—Å–∫–∏ —Å—ä–≤–µ—Ç": "–û–±—â–∏–Ω—Å–∫–∏—è—Ç —Å—ä–≤–µ—Ç –µ –∫–æ–ª–µ–∫—Ç–∏–≤–µ–Ω –æ—Ä–≥–∞–Ω –Ω–∞ –º–µ—Å—Ç–Ω–æ—Ç–æ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –°—ä—Å—Ç–∞–≤: https://www.dimitrovgrad.bg/bg/obshtinski-savet",
    "–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª": "–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª –Ω–∞ –û–±—â–∏–Ω—Å–∫–∏—è —Å—ä–≤–µ—Ç –µ –ì–µ—Ä–≥–∞–Ω–∞ –ö—Ä—ä—Å—Ç–µ–≤–∞. –ü–æ–≤–µ—á–µ: https://www.dimitrovgrad.bg/bg/predsedatel-na-obshtinski-savet",
    "—Ç–µ–ª–µ—Ñ–æ–Ω": "–¶–µ–Ω—Ç—ä—Ä –∑–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ –æ–±—Å–ª—É–∂–≤–∞–Ω–µ: 0391/68 214. –ì–æ—Ä–µ—â —Ç–µ–ª–µ—Ñ–æ–Ω: 0391/68 222. –ü–æ–≤–µ—á–µ: https://www.dimitrovgrad.bg/bg/kontakti",
    "–∫—É–ª—Ç—É—Ä–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞": "–ê–∫—Ç—É–∞–ª–Ω–∞—Ç–∞ –∫—É–ª—Ç—É—Ä–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ –µ –ø—É–±–ª–∏–∫—É–≤–∞–Ω–∞ —Ç—É–∫: https://www.dimitrovgrad.bg/bg/kultura",
    "—Å–µ—Å–∏—è": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Å–µ—Å–∏–∏—Ç–µ –Ω–∞ –û–±—â–∏–Ω—Å–∫–∏—è —Å—ä–≤–µ—Ç: https://www.dimitrovgrad.bg/bg/aktove-na-obshtinskiya-savet/. –¢—ä—Ä—Å–µ—Ç–µ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏ –∏ –¥–Ω–µ–≤–Ω–∏ —Ä–µ–¥–æ–≤–µ —Ç–∞–º.",
    "–±—é–¥–∂–µ—Ç 2025": "–û–±—â–∏–Ω—Å–∫–∏—è—Ç —Å—ä–≤–µ—Ç –æ–±—Å—ä–∂–¥–∞ –æ—Ç—á–µ—Ç–∞ –∑–∞ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ 6 –º–µ—Å–µ—Ü–∞ (—á–ª.106 –æ—Ç –ü—Ä–∞–≤–∏–ª–Ω–∏–∫–∞). –í–∏–∂—Ç–µ: https://www.dimitrovgrad.bg/bg/pravilnik-na-obshtinski-savet/. –ê–∫—Ç—É–∞–ª–Ω–∏ –∞–∫—Ç–æ–≤–µ: https://www.dimitrovgrad.bg/bg/aktove-na-obshtinskiya-savet/. –ê–∫–æ –Ω–µ –µ –Ω–∞–ª–∏—á–Ω–æ, –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–∏—Ç–µ: https://www.dimitrovgrad.bg/bg/programi-1/.",
    "—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ–±—â–∏–Ω—Å–∫–∏—è —Å—ä–≤–µ—Ç": "–ê–∫—Ç–æ–≤–µ –∏ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –û–±—â–∏–Ω—Å–∫–∏—è —Å—ä–≤–µ—Ç: https://www.dimitrovgrad.bg/bg/aktove-na-obshtinskiya-savet/. –ó–∞ –ø—Ä–∞–≤–∏–ª–Ω–∏–∫–∞: https://www.dimitrovgrad.bg/bg/pravilnik-na-obshtinski-savet/. –¢—ä—Ä—Å–µ—Ç–µ PDF —Ñ–∞–π–ª–æ–≤–µ –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏ –¥–∏—Ä–µ–∫—Ç–Ω–æ –Ω–∞ —Å–∞–π—Ç–∞.",
}

def search_google(query):
    base_url = "https://www.googleapis.com/customsearch/v1"
    params = {
        "q": query + " site:dimitrovgrad.bg",
        "key": API_KEY,
        "cx": CX,
        "num": 10,  # –£–≤–µ–ª–∏—á–µ–Ω –±—Ä–æ–π —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∑–∞ –ø–æ-–¥—ä–ª–±–æ–∫–æ —Ç—ä—Ä—Å–µ–Ω–µ
    }
    resp = requests.get(base_url, params=params).json()
    return resp.get("items", [])

def generate_ai_response(query, search_results):
    if not GEMINI_API_KEY:
        return "‚ùó –õ–∏–ø—Å–≤–∞ GEMINI_API_KEY –∑–∞ AI."

    genai.configure(api_key=GEMINI_API_KEY)
    model = genai.GenerativeModel("gemini-1.5-flash")

    current_date = datetime.now().strftime("%d.%m.%Y (%A), %H:%M —á.")
    snippets = "\n".join(
        [f"- {item.get('title', '')}: {item.get('link', '')}\n{item.get('snippet','')}" for item in search_results]
    )
    prompt = f"""–î–Ω–µ—Å –µ {current_date}.
–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –ø–∏—Ç–∞: '{query}'.
–ë–∞–∑–∏—Ä–∞–π —Å–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞ –æ—Ç —Å–∞–π—Ç–∞ –Ω–∞ –û–±—â–∏–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–≥—Ä–∞–¥:
{snippets}

–ò–∑–≤–µ–¥–∏ –æ—Ç–≥–æ–≤–æ—Ä –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏, —Å —è—Å–µ–Ω –∏ –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ —Å—Ç–∏–ª üôÇ. –ê–∫–æ –∏–º–∞ –ª–∏–Ω–∫–æ–≤–µ, –≤–º—ä–∫–Ω–∏ –≥–∏ –∫–∞—Ç–æ –∞–∫—Ç–∏–≤–Ω–∏ (–Ω–∞–ø—Ä. [–ª–∏–Ω–∫ —Ç–µ–∫—Å—Ç](https://url)). –ë—ä–¥–∏ –ø–æ–ª–µ–∑–µ–Ω –∏ —Ç–æ—á–µ–Ω. –ê–∫–æ –≤—ä–ø—Ä–æ—Å—ä—Ç –µ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ –¥–µ—Ç–∞–π–ª–∏ –∫–∞—Ç–æ –±—é–¥–∂–µ—Ç–∏, —Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å—ä–≤–µ—Ç–∞, –≤–∏–¥–µ–∞ –∏–ª–∏ —Ñ–∞–π–ª–æ–≤–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏ –¥–∏—Ä–µ–∫—Ç–Ω–∏ –ª–∏–Ω–∫–æ–≤–µ –∫—ä–º PDF, –≤–∏–¥–µ–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ —Å —Ç—è—Ö. **–í–∏–Ω–∞–≥–∏ –ø—Ä–æ–≤–µ—Ä—è–≤–∞–π –ª–∏–Ω–∫–æ–≤–µ—Ç–µ –æ—Ç —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ ‚Äì –Ω–µ –∏–∑–º–∏—Å–ª—è–π –Ω–æ–≤–∏ –∏ –∏–∑–±—è–≥–≤–∞–π 404 –≥—Ä–µ—à–∫–∏**. –¢—ä—Ä—Å–∏ –Ω–∞–π-–º–∞–ª–∫–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∏ –∞–∫–æ –µ –Ω—É–∂–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ –ª–∏–Ω–∫ –∫—ä–º —Å—ä–æ—Ç–≤–µ—Ç–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –≤–∏–¥–µ–æ. –ê–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞ –Ω–µ –µ –Ω–∞–ª–∏—á–Ω–∞, –∫–∞–∂–∏ —á–µ—Å—Ç–Ω–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∞–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (–Ω–∞–ø—Ä. "–ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –¥–∏—Ä–µ–∫—Ç–Ω–æ –Ω–∞ —Å–∞–π—Ç–∞").
"""

    try:
        response = model.generate_content(prompt)
        # –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ –¥–∞ —Å–µ —É–≤–µ—Ä–∏–º, —á–µ –ª–∏–Ω–∫–æ–≤–µ—Ç–µ —Å–∞ –≤ Markdown —Ñ–æ—Ä–º–∞—Ç, –∫–æ–π—Ç–æ linkify —â–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞
        return response.text.replace("[", "").replace("](", ": ").replace(")", "")  # –ü—Ä–æ—Å—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—è, –∞–∫–æ –µ –Ω—É–∂–Ω–æ
    except Exception as e:
        return f"‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ AI –æ–±—Ä–∞–±–æ—Ç–∫–∞: {str(e)}"

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/search", methods=["POST"])
def search():
    data = request.json
    query = data.get("query", "").lower()

    if any(word in query for word in ["–¥–µ–Ω", "–¥–Ω–µ—Å", "–¥–∞—Ç–∞", "—á–∞—Å"]):
        now = datetime.now().strftime("%d.%m.%Y (%A), %H:%M —á.")
        return jsonify([{"title": "–í—Ä–µ–º–µ", "link": "#", "snippet": f"‚åõ –î–Ω–µ—Å –µ {now}."}])

    for key, answer in FAQ.items():
        if key in query:
            return jsonify([{"title": "FAQ", "link": "#", "snippet": answer}])

    if not API_KEY or not CX:
        return jsonify({"error": "–õ–∏–ø—Å–≤–∞ API_KEY –∏–ª–∏ CX"}), 500

    try:
        results = search_google(query)
        ai_answer = generate_ai_response(query, results)
        return jsonify([{"title": "AI –û—Ç–≥–æ–≤–æ—Ä", "link": "#", "snippet": ai_answer}])
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)

from flask import Flask, request, jsonify, render_template
import requests
import os
from datetime import datetime
import google.generativeai as genai

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_KEY = os.getenv("GOOGLE_API_KEY")
CX = os.getenv("GOOGLE_CX")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# üîç –¢—ä—Ä—Å–µ–Ω–µ –≤ Google Custom Search
def search_google(query):
    base_url = "https://www.googleapis.com/customsearch/v1"

    # –ø—Ä–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏ –∑–∞—è–≤–∫–∏ ‚Äì —Ç–∞—Ä–≥–µ—Ç–∏—Ä–∞–º–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if "–±—é–¥–∂–µ—Ç" in query.lower():
        query += " site:dimitrovgrad.bg/bg/bjudzhet"
    elif "—Ä–µ—à–µ–Ω–∏–µ" in query.lower() or "—Å–µ—Å–∏—è" in query.lower():
        query += " site:dimitrovgrad.bg/bg/obshtinski-savet"
    elif "–≤–∏–¥–µ–æ" in query.lower():
        query += " site:dimitrovgrad.bg/bg/obshtinski-savet/video"
    else:
        query += " site:dimitrovgrad.bg"

    params = {"q": query, "key": API_KEY, "cx": CX}
    resp = requests.get(base_url, params=params).json()
    return resp.get("items", [])

# üß† –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ AI –æ—Ç–≥–æ–≤–æ—Ä
def generate_ai_response(query, search_results):
    if not GEMINI_API_KEY:
        return "‚ùó –õ–∏–ø—Å–≤–∞ GEMINI_API_KEY –∑–∞ AI."

    genai.configure(api_key=GEMINI_API_KEY)
    model = genai.GenerativeModel("gemini-1.5-flash")

    current_date = datetime.now().strftime("%d.%m.%Y (%A), %H:%M —á.")

    snippets = ""
    for item in search_results:
        link = item.get("link", "")
        title = item.get("title", "")
        snippet = item.get("snippet", "")
        if link.endswith(".pdf"):
            snippets += f"- <a href='{link}' target='_blank'>{title}</a> ‚¨áÔ∏è <a href='{link}' target='_blank' class='download-btn'>–ò–∑—Ç–µ–≥–ª–∏ PDF</a>\n{snippet}\n"
        else:
            snippets += f"- <a href='{link}' target='_blank'>{title}</a>\n{snippet}\n"

    prompt = f"""–î–Ω–µ—Å –µ {current_date}.
–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –ø–∏—Ç–∞: '{query}'.
–ë–∞–∑–∏—Ä–∞–π —Å–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è—Ç–∞ –æ—Ç —Å–∞–π—Ç–∞ –Ω–∞ –û–±—â–∏–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–≥—Ä–∞–¥:
{snippets}

–§–æ—Ä–º–∏—Ä–∞–π –æ—Ç–≥–æ–≤–æ—Ä –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏, –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ –∏ —è—Å–µ–Ω üôÇ.
- –ê–∫–æ –∏–º–∞ —Ç–æ—á–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä –±—é–¥–∂–µ—Ç, —Ä–µ—à–µ–Ω–∏–µ), –Ω–∞–ø–∏—à–∏ –≥–æ –¥–∏—Ä–µ–∫—Ç–Ω–æ.
- –°–ª–µ–¥ —Ç–æ–≤–∞ –¥–∞–π 1-2 –∞–∫—Ç–∏–≤–Ω–∏ –ª–∏–Ω–∫–∞ –∫—ä–º –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏/—Å—Ç—Ä–∞–Ω–∏—Ü–∏.
–ò–∑–ø–æ–ª–∑–≤–∞–π HTML —Ñ–æ—Ä–º–∞—Ç –∑–∞ –ª–∏–Ω–∫–æ–≤–µ—Ç–µ: <a href="URL" target="_blank">–∏–º–µ</a>.
"""

    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        return f"‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ AI –æ–±—Ä–∞–±–æ—Ç–∫–∞: {str(e)}"

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/search", methods=["POST"])
def search():
    data = request.get_json()
    query = data.get("query", "")
    if not query:
        return jsonify({"error": "–ù—è–º–∞ –ø–æ–¥–∞–¥–µ–Ω –≤—ä–ø—Ä–æ—Å."})

    search_results = search_google(query)
    ai_answer = generate_ai_response(query, search_results)

    return jsonify([{"snippet": ai_answer}])

if __name__ == "__main__":
    app.run(debug=True)


